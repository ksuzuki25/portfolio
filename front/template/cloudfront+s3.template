#*******************************************************************************
# Static Site Distribution（CloudFront + S3）
#*******************************************************************************
AWSTemplateFormatVersion: 2010-09-09
Description: 
  S3 and CloudFront for Static website hosting (OAI Available)
Parameters:
  SystemName:
    Description: "Please enter a name to identify the specified System."
    Type: String
  Worker:
    Description: "Please enter the worker's Name as a format of FirstName LastName."
    Type: String
  Date:
    Description: "Please enter the Date of the deployment as a format of yyyy/mm/dd."
    Type: String
    AllowedPattern : "^\\d{4}(/\\d{2}){2}$"
  BucketName:
    Description: "Please enter the Bucket Name for static website contents."
    Type: String
  ApiDomain:
    Description: "Please enter the API Domain of API Gateway."
    Type: String
  WebACLId:
    Description: "Please enter the Web ACL ARN"
    Type: String
  # 静的Webサイトのドメイン名
  # WebsiteDomainName:
  #   Description: "Please enter the Website Domain Name."
  #   Type: String
  # Route53ホストゾーンID
  # HostZoneId:
  #   Description: "Please enter the Route53 HostZone Id for CloudFront Distribution."
  #   Type: String
  #   Default: 'Z0xxxxxxxxxxxx'
  # CloudFrontに設定するCertificate Manager証明書ARN （※リージョンがバージニア北部の証明書を指定）
  # CertificateManagerARN:
  #   Description: "Please enter the Certificate Manager ARN for CloudFront. Region us-east-1 needed."
  #   Type: String
  # Cost Management用のタグ
  BillingGroup:
    Description: "Please enter the Cost tag".
    Type: String
  # API Gatewayへの直接アクセスを禁止するためのAPIKeyを指定
  APIKey:
    Description: "Please enter a api key between cloudfront and api gateway.".
    Type: String
  # ベーシック認証のユーザー:パスをBase64エンコードしたものを指定
  BasicAuth:
    Description: "Please enter the base64 encoded Basic Auth settings like user:pass".
    Type: String
Resources:
  #------------------------------------------------------------#
  #  S3 Bucket for front
  #------------------------------------------------------------#
  Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "cf-${BucketName}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags: 
        - Key: Name
          Value: !Sub "${SystemName}-CloudFront-S3"
        - Key: Worker
          Value: !Ref Worker
        - Key: Date
          Value: !Ref Date
        - Key: BillingGroup
          Value: !Ref BillingGroup

  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "access-identity-${Bucket}"

  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
        - Action: "s3:GetObject"
          Effect: Allow
          Resource: !Sub "arn:aws:s3:::${Bucket}/*"
          Principal:
            CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
  #------------------------------------------------------------#
  #  CloudFront
  #------------------------------------------------------------#  
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        PriceClass: PriceClass_All
        # Aliases:
        # - !Ref WebsiteDomainName
        Origins:
          # Front Content
          - DomainName: !GetAtt Bucket.RegionalDomainName
            Id: !Sub "S3origin-${BucketName}"
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
          # API
          - DomainName: !Ref ApiDomain
            Id: !Sub "APIorigin-${SystemName}"
            OriginPath: "/prod"
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
            OriginCustomHeaders: 
              - HeaderName: "x-api-key"
                HeaderValue: !Ref APIKey
        #★DefaultRootObjectは設計に合わせてデプロイする都度修正★
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: !Sub "S3origin-${BucketName}"
          # ★ViewerProtoclPolicyは設計に合わせて都度修正（HTTPSのみとする場合やHTTPをHTTPSにリダイレクトする場合など）★
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          #★マネージドキャッシュポリシーCachingOptimizedを使用、他に変更する場合は設計に合わせてデプロイする都度修正★
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt IPRistriction.FunctionMetadata.FunctionARN
        # API cache setting
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            TargetOriginId: !Sub "APIorigin-${SystemName}"
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: '50'
            PathPattern: api/*
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            FunctionAssociations:
              - EventType: viewer-request
                FunctionARN: !GetAtt IPRistriction.FunctionMetadata.FunctionARN
        # ViewerCertificate:
        #   SslSupportMethod: sni-only
        #   MinimumProtocolVersion: TLSv1.2_2019
        #   AcmCertificateArn: !Ref CertificateManagerARN
        HttpVersion: http2
        IPV6Enabled: true
        Enabled: true
        PriceClass: "PriceClass_200"
        Restrictions:
          GeoRestriction:
            RestrictionType: whitelist
            Locations:
            - JP
        WebACLId: !Ref WebACLId
      Tags:
        - Key: Name
          Value: !Sub "${SystemName}-CloudFront-Distribution"
        - Key: Worker
          Value: !Ref Worker
        - Key: Date
          Value: !Ref Date
        - Key: BillingGroup
          Value: !Ref BillingGroup
  # #-----------------------------------------------------------------------------
  # # CloudFrontのDNS登録 Route53HostedZoneが既に存在する前提
  # #-----------------------------------------------------------------------------
  # CloudFrontDnsRecord:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneId: !Sub "${HostZoneId}"
  #     Comment: "DNS for CloudFront"
  #     Name: !Sub "${WebsiteDomainName}"
  #     Type: A
  #     AliasTarget:
  #       HostedZoneId: XXXXXXXX
  #       DNSName: !GetAtt CloudFrontDistribution.DomainName
  #-----------------------------------------------------------------------------
  # URLにindex.htmlを追加する用のCloudFront Functions
  #-----------------------------------------------------------------------------
  BasicAuthCloudFrontFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub "${SystemName}-Basic-Auth"
      AutoPublish: true
      FunctionCode: !Sub |
        function handler(event) {
          var request = event.request;
          var headers = request.headers;
          // ユーザー名:パスワード kobuhei-develop:poleved-iehubok | 実行時間を短縮するため、予めbase64エンコード
          var authString = "Basic ${BasicAuth}";
          if (
            typeof headers.authorization === "undefined" ||
            headers.authorization.value !== authString
          ) {
            return {
              statusCode: 401,
              statusDescription: "Unauthorized",
              headers: { "www-authenticate": { value: "Basic" } }
            };
          }
          
          // URLパス補完処理
          var uri = request.uri;
          // Check whether the URI is missing a file name.
          if (uri.endsWith('/')) {
              request.uri += 'index.html';
          }
          // Check whether the URI is missing a file extension.
          else if (!uri.includes('.')) {
              request.uri += '/index.html';
          }
          return request;
        }
      FunctionConfig: 
        Comment: "Basic Authorization"
        Runtime: cloudfront-js-1.0
